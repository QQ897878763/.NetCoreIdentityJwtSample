<?xml version="1.0"?>
<doc>
    <assembly>
        <name>IdentityJwtSample</name>
    </assembly>
    <members>
        <member name="M:IdentityJwtSample.Controllers.UsersController.Register(IdentityJwtSample.Dto.UserDto)">
            <summary>
            注册
            </summary>
            <param name="userDto"></param>
            <returns></returns>
        </member>
        <member name="M:IdentityJwtSample.Controllers.UsersController.Authenticate(IdentityJwtSample.Dto.UserDto)">
            <summary>
            获取授权
            </summary>
            <param name="userDto"></param>
            <returns></returns>
        </member>
        <member name="M:IdentityJwtSample.Controllers.UsersController.RefreshToken(IdentityJwtSample.Dto.TokenDto)">
            <summary>
            刷新令牌
            </summary>
            <param name="oldTokenDto"></param>
            <returns></returns>
        </member>
        <member name="M:IdentityJwtSample.Controllers.UsersController.GetAll">
            <summary>
            获取所有用户信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:IdentityJwtSample.Controllers.UsersController.GetById(System.Int32)">
            <summary>
            根据ID获取制定用户
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:IdentityJwtSample.Controllers.UsersController.Update(System.Int32,IdentityJwtSample.Dto.UserDto)">
            <summary>
            更新用户信息
            </summary>
            <param name="id"></param>
            <param name="userDto"></param>
            <returns></returns>
        </member>
        <member name="M:IdentityJwtSample.Controllers.UsersController.Delete(System.Int32)">
            <summary>
            删除用户信息
            </summary>
            <param name="Id"></param>
            <returns></returns>
        </member>
        <member name="T:IdentityJwtSample.Dto.TokenDto">
            <summary>
            Token
            </summary>
        </member>
        <member name="P:IdentityJwtSample.Dto.TokenDto.RefRefreshToken">
            <summary>
            刷新Token
            用于刷新Token用
            </summary>
        </member>
        <member name="P:IdentityJwtSample.Dto.TokenDto.RefRefreshTokenExpires">
            <summary>
            刷新Token有效期
            使用Token访问API提示401后判断该值是否大于当前时间，如果大于则表示可以调用刷新Token API
            </summary>
        </member>
        <member name="P:IdentityJwtSample.Dto.TokenDto.Token">
            <summary>
            Authorization Token值
            </summary>
        </member>
        <member name="P:IdentityJwtSample.Entities.User.RefRefreshToken">
            <summary>
            刷新Token
            用于刷新Token用
            </summary>
        </member>
        <member name="P:IdentityJwtSample.Entities.User.RefRefreshTokenExpires">
            <summary>
            刷新Token有效期
            使用Token访问API提示401后判断该值是否大于当前时间，如果大于则表示可以调用刷新Token API
            </summary>
        </member>
        <member name="M:IdentityJwtSample.Helpers.AutofacConfig.RegisterService(System.Collections.Generic.List{System.Reflection.Assembly},Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            注册服务
            </summary>
            <param name="builder"></param>
            <param name="assemblieLst"></param>
        </member>
        <member name="T:IdentityJwtSample.Helpers.ContainerManager">
            <summary>
            容器管理器
            </summary>
        </member>
        <member name="P:IdentityJwtSample.Helpers.ContainerManager.Container">
            <summary>
            容器
            </summary>
        </member>
        <member name="M:IdentityJwtSample.Helpers.ContainerManager.Resolve``1(System.Collections.Generic.IEnumerable{Autofac.Core.Parameter})">
            <summary>
            获取实例
            </summary>
            <typeparam name="T"></typeparam>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:IdentityJwtSample.Helpers.ContainerManager.ResolveNamed``1(System.String)">
            <summary>
            根据接口的实现类名称，实例化对象
            </summary>
            <typeparam name="T">接口名称</typeparam>
            <param name="name">接口对应的实现类名称</param>
            <returns>实例化接口实现类的对象</returns>
        </member>
        <member name="T:IdentityJwtSample.Services.UserService">
            <summary>
            用户服务
            </summary>
        </member>
        <member name="M:IdentityJwtSample.Services.UserService.Authenticate(System.String,System.String)">
            <summary>
            验证身份
            </summary>
            <param name="username"></param>
            <param name="password"></param>
            <returns></returns>
        </member>
        <member name="M:IdentityJwtSample.Services.UserService.RefreshToken(IdentityJwtSample.Dto.TokenDto)">
            <summary>
            刷新令牌
            必须在当前Token有效期内刷新，可以由前端主动发起刷新请求，
            也可以在后端每次接口验证时候根据Token的过期时间与当前时间判断，如果时间相近到一个最小值则主动刷新Token。这种方式
            不好的地方在于对每个请求的响应值里都必须添加Token和RefRefreshToken(因为后台刷新后前端需要保存，不然下次请求带的Token后端会验证失败) 
            推荐的做法是服务端新增一个RefRefreshTokenExpires(刷新Token有效期)给前端，目的是在前端在请求返回401后验证当前时间是否小于
            RefRefreshTokenExpires(刷新Token有效期)，如果小于则调用刷新Token这个API获取到服务端颁发的新Token(用户无感知方式授权)，
            否则让用户重新登录(用户有感知方式授权);
            </summary>
            <param name="oldTokenDto"></param>
            <returns></returns>
        </member>
        <member name="M:IdentityJwtSample.Startup.RegisterIOC(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            注册IOC服务 
            使用Autofac替换默认依赖注入组件
            </summary>
            <param name="services"></param>
            <returns></returns>
        </member>
        <member name="M:IdentityJwtSample.Startup.AddAutoMapper">
            <summary>
            初始化AutoMapper
            </summary>
        </member>
        <member name="M:IdentityJwtSample.Startup.AddAuthentication(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            新增身份验证
            </summary>
            <param name="services"></param>
        </member>
    </members>
</doc>
